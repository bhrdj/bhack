hi
m <- cbind(1, 1:7) # the '1' (= shorter vector) is recycled
m
m <- cbind(m, 8:14)[, c(1, 3, 2)] # insert a column
m
m0 <- matrix(NA, 4, 0)
rownames(m0)
m)
m0
summarize(m0)
summarize(m)
summarize
summary(m)
summary(m0)
?rm
# ronaVote
# Regressing panel data on COVID outcomes on 2020 election data
library(data.table)
library(dplyr)
library(tibble)
library(tidyr)
library(purrr)
library(broom)
library(ggplot2)
setwd("~/git/bhack/nlyz/ronaVote/wrkdir")
# GET DATA ---------------------------------------------------------------------
getData <- function(){
pathRona <- "~/git/bhack/data/rona/NYT/us-counties.csv"
pathArea <- "~/git/bhack/data/rona/CountiesLandArea/LND01.csv"
pathPop <-  "~/git/bhack/data/rona/USDA_PopulationData/PopEst2019.csv"
pathVote <- "~/git/bhack/data/vote/NYT/presidential.csv"
ronaDays <- fread(pathRona, select = grep(        "fips|date|cases",
names(fread(pathRona, nrow = 0L))))
ronaDays <- rename(ronaDays, casesT = cases)                                  # renamed "cases" to "casesT"
area <- fread(pathArea, select = grep(            "fips|mi2",
names(fread(pathArea, nrow = 0L))))
popu <- fread(pathPop, select = grep(             "fips|state|area_name|pop2019",
names(fread(pathPop, nrow = 0L))))
vote <- fread(pathVote, select = grep(            "fips|margin2020|votes$",
names(fread(pathVote, nrow = 0L))))
return(list(ronaDays=ronaDays, area=area, popu=popu, vote=vote))
}
rawData <- getData()
ronaDays <- rawData[["ronaDays"]]
area <- rawData[["area"]]
popu <- rawData[["popu"]]
vote <- rawData[["vote"]]
rm(rawData)
# DAYS TO WEEKS ----------------------------------------------------------------
zeroMonday <- as.IDate("2019-12-29")                                            # Base date for counting weeks
ronaWeeks <- ronaDays %>%
mutate(weekNum = as.numeric(date - zeroMonday) %/% 7)
distinct(fips, weekNum)
mutate(weekDate = as.Date(weekNum * 7, origin=zeroMonday))
mutate(week_DateT = paste("t", gsub("-", "_", ronaWeeks$weekDate), sep=""))
mutate(week_DateW = paste("w", gsub("-", "_", ronaWeeks$weekDate), sep=""))
rm(ronaDays)
library(data.table)
library(dplyr)
library(tibble)
library(tidyr)
library(purrr)
library(broom)
library(ggplot2)
setwd("~/git/bhack/nlyz/ronaVote/wrkdir")
# GET DATA ---------------------------------------------------------------------
getData <- function(){
pathRona <- "~/git/bhack/data/rona/NYT/us-counties.csv"
pathArea <- "~/git/bhack/data/rona/CountiesLandArea/LND01.csv"
pathPop <-  "~/git/bhack/data/rona/USDA_PopulationData/PopEst2019.csv"
pathVote <- "~/git/bhack/data/vote/NYT/presidential.csv"
ronaDays <- fread(pathRona, select = grep(        "fips|date|cases",
names(fread(pathRona, nrow = 0L))))
ronaDays <- rename(ronaDays, casesT = cases)                                  # renamed "cases" to "casesT"
area <- fread(pathArea, select = grep(            "fips|mi2",
names(fread(pathArea, nrow = 0L))))
popu <- fread(pathPop, select = grep(             "fips|state|area_name|pop2019",
names(fread(pathPop, nrow = 0L))))
vote <- fread(pathVote, select = grep(            "fips|margin2020|votes$",
names(fread(pathVote, nrow = 0L))))
return(list(ronaDays=ronaDays, area=area, popu=popu, vote=vote))
}
rawData <- getData()
ronaDays <- rawData[["ronaDays"]]
library(data.table)
library(dplyr)
library(tibble)
library(tidyr)
library(purrr)
library(broom)
library(ggplot2)
setwd("~/git/bhack/nlyz/ronaVote/wrkdir")
# GET DATA ---------------------------------------------------------------------
getData <- function(){
pathRona <- "~/git/bhack/data/rona/NYT/us-counties.csv"
pathArea <- "~/git/bhack/data/rona/CountiesLandArea/LND01.csv"
pathPop <-  "~/git/bhack/data/rona/USDA_PopulationData/PopEst2019.csv"
pathVote <- "~/git/bhack/data/vote/NYT/presidential.csv"
ronaDays <- fread(pathRona, select = grep(        "fips|date|cases",
names(fread(pathRona, nrow = 0L))))
ronaDays <- rename(ronaDays, casesT = cases)                                  # renamed "cases" to "casesT"
area <- fread(pathArea, select = grep(            "fips|mi2",
names(fread(pathArea, nrow = 0L))))
popu <- fread(pathPop, select = grep(             "fips|state|area_name|pop2019",
names(fread(pathPop, nrow = 0L))))
vote <- fread(pathVote, select = grep(            "fips|margin2020|votes$",
names(fread(pathVote, nrow = 0L))))
return(list(ronaDays=ronaDays, area=area, popu=popu, vote=vote))
}
rawData <- getData()
ronaDays <- rawData[["ronaDays"]]
area <- rawData[["area"]]
popu <- rawData[["popu"]]
vote <- rawData[["vote"]]
rm(rawData)
# DAYS TO WEEKS ----------------------------------------------------------------
zeroMonday <- as.IDate("2019-12-29")                                            # Base date for counting weeks
ronaWeeks <- ronaDays %>%
mutate(weekNum = as.numeric(date - zeroMonday) %/% 7)
distinct(fips, weekNum)
# GET DATA ---------------------------------------------------------------------
getData <- function(){
pathRona <- "~/git/bhack/data/rona/NYT/us-counties.csv"
pathArea <- "~/git/bhack/data/rona/CountiesLandArea/LND01.csv"
pathPop <-  "~/git/bhack/data/rona/USDA_PopulationData/PopEst2019.csv"
pathVote <- "~/git/bhack/data/vote/NYT/presidential.csv"
ronaDays <- fread(pathRona, select = grep(        "fips|date|cases",
names(fread(pathRona, nrow = 0L))))
ronaDays <- rename(ronaDays, casesT = cases)                                  # renamed "cases" to "casesT"
area <- fread(pathArea, select = grep(            "fips|mi2",
names(fread(pathArea, nrow = 0L))))
popu <- fread(pathPop, select = grep(             "fips|state|area_name|pop2019",
names(fread(pathPop, nrow = 0L))))
vote <- fread(pathVote, select = grep(            "fips|margin2020|votes$",
names(fread(pathVote, nrow = 0L))))
return(list(ronaDays=ronaDays, area=area, popu=popu, vote=vote))
}
rawData <- getData()
ronaDays <- rawData[["ronaDays"]]
area <- rawData[["area"]]
popu <- rawData[["popu"]]
vote <- rawData[["vote"]]
rm(rawData)
# DAYS TO WEEKS ----------------------------------------------------------------
zeroMonday <- as.IDate("2019-12-29")                                            # Base date for counting weeks
ronaWeeks <- ronaDays %>%
mutate(weekNum = as.numeric(date - zeroMonday) %/% 7) %>%
distinct(fips, weekNum) %>%
mutate(weekDate = as.Date(weekNum * 7, origin=zeroMonday)) %>%
mutate(week_DateT = paste("t", gsub("-", "_", ronaWeeks$weekDate), sep="")) %>%
mutate(week_DateW = paste("w", gsub("-", "_", ronaWeeks$weekDate), sep=""))
# GET DATA ---------------------------------------------------------------------
getData <- function(){
pathRona <- "~/git/bhack/data/rona/NYT/us-counties.csv"
pathArea <- "~/git/bhack/data/rona/CountiesLandArea/LND01.csv"
pathPop <-  "~/git/bhack/data/rona/USDA_PopulationData/PopEst2019.csv"
pathVote <- "~/git/bhack/data/vote/NYT/presidential.csv"
ronaDays <- fread(pathRona, select = grep(        "fips|date|cases",
names(fread(pathRona, nrow = 0L))))
ronaDays <- rename(ronaDays, casesT = cases)                                  # renamed "cases" to "casesT"
area <- fread(pathArea, select = grep(            "fips|mi2",
names(fread(pathArea, nrow = 0L))))
popu <- fread(pathPop, select = grep(             "fips|state|area_name|pop2019",
names(fread(pathPop, nrow = 0L))))
vote <- fread(pathVote, select = grep(            "fips|margin2020|votes$",
names(fread(pathVote, nrow = 0L))))
return(list(ronaDays=ronaDays, area=area, popu=popu, vote=vote))
}
rawData <- getData()
ronaDays <- rawData[["ronaDays"]]
area <- rawData[["area"]]
popu <- rawData[["popu"]]
vote <- rawData[["vote"]]
rm(rawData)
# DAYS TO WEEKS ----------------------------------------------------------------
zeroMonday <- as.IDate("2019-12-29")                                            # Base date for counting weeks
ronaWeeks <- ronaDays %>%
mutate(weekNum = as.numeric(date - zeroMonday) %/% 7) %>%
distinct(fips, weekNum) %>%
mutate(weekDate = as.Date(weekNum * 7, origin=zeroMonday)) %>%
mutate(week_DateT = paste("t", gsub("-", "_", ronaWeeks$weekDate), sep="")) %>%
mutate(week_DateW = paste("w", gsub("-", "_", ronaWeeks$weekDate), sep=""))
# GET DATA ---------------------------------------------------------------------
getData <- function(){
pathRona <- "~/git/bhack/data/rona/NYT/us-counties.csv"
pathArea <- "~/git/bhack/data/rona/CountiesLandArea/LND01.csv"
pathPop <-  "~/git/bhack/data/rona/USDA_PopulationData/PopEst2019.csv"
pathVote <- "~/git/bhack/data/vote/NYT/presidential.csv"
ronaDays <- fread(pathRona, select = grep(        "fips|date|cases",
names(fread(pathRona, nrow = 0L))))
ronaDays <- rename(ronaDays, casesT = cases)                                  # renamed "cases" to "casesT"
area <- fread(pathArea, select = grep(            "fips|mi2",
names(fread(pathArea, nrow = 0L))))
popu <- fread(pathPop, select = grep(             "fips|state|area_name|pop2019",
names(fread(pathPop, nrow = 0L))))
vote <- fread(pathVote, select = grep(            "fips|margin2020|votes$",
names(fread(pathVote, nrow = 0L))))
return(list(ronaDays=ronaDays, area=area, popu=popu, vote=vote))
}
rawData <- getData()
ronaDays <- rawData[["ronaDays"]]
area <- rawData[["area"]]
popu <- rawData[["popu"]]
vote <- rawData[["vote"]]
rm(rawData)
# DAYS TO WEEKS ----------------------------------------------------------------
zeroMonday <- as.IDate("2019-12-29")                                            # Base date for counting weeks
ronaWeeks <- ronaDays %>%
mutate(weekNum = as.numeric(date - zeroMonday) %/% 7) %>%
distinct(fips, weekNum) %>%
mutate(weekDate = as.Date(weekNum * 7, origin=zeroMonday)) %>%
mutate(week_DateT = paste("t", gsub("-", "_", weekDate), sep="")) %>%
mutate(week_DateW = paste("w", gsub("-", "_", weekDate), sep=""))
rm(ronaDays)
# ronaVote
# Regressing panel data on COVID outcomes on 2020 election data
library(data.table)
library(dplyr)
library(tibble)
library(tidyr)
library(purrr)
library(broom)
library(ggplot2)
setwd("~/git/bhack/nlyz/ronaVote/wrkdir")
# GET DATA ---------------------------------------------------------------------
getData <- function(){
pathRona <- "~/git/bhack/data/rona/NYT/us-counties.csv"
pathArea <- "~/git/bhack/data/rona/CountiesLandArea/LND01.csv"
pathPop <-  "~/git/bhack/data/rona/USDA_PopulationData/PopEst2019.csv"
pathVote <- "~/git/bhack/data/vote/NYT/presidential.csv"
ronaDays <- fread(pathRona, select = grep(        "fips|date|cases",
names(fread(pathRona, nrow = 0L))))
ronaDays <- rename(ronaDays, casesT = cases)                                  # renamed "cases" to "casesT"
area <- fread(pathArea, select = grep(            "fips|mi2",
names(fread(pathArea, nrow = 0L))))
popu <- fread(pathPop, select = grep(             "fips|state|area_name|pop2019",
names(fread(pathPop, nrow = 0L))))
vote <- fread(pathVote, select = grep(            "fips|margin2020|votes$",
names(fread(pathVote, nrow = 0L))))
return(list(ronaDays=ronaDays, area=area, popu=popu, vote=vote))
}
rawData <- getData()
ronaDays <- rawData[["ronaDays"]]
area <- rawData[["area"]]
popu <- rawData[["popu"]]
vote <- rawData[["vote"]]
rm(rawData)
# DAYS TO WEEKS ----------------------------------------------------------------
zeroMonday <- as.IDate("2019-12-29")                                            # Base date for counting weeks
ronaTall <- ronaDays %>%
mutate(weekNum = as.numeric(date - zeroMonday) %/% 7) %>%                     # Number the weeks from zeroMonday
distinct(fips, weekNum) %>%                                                   # Remove extra rows after first row/week/county
mutate(weekDate = as.Date(weekNum * 7, origin=zeroMonday)) %>%                # Reconstruct uniform dates for all rows in each week
mutate(week_DateT = paste("t", gsub("-", "_", weekDate), sep="")) %>%         # weekDate without "-", with "t" for total cases
mutate(week_DateW = paste("w", gsub("-", "_", weekDate), sep=""))             # weekDate without "-", with "w" for a week of cases
rm(ronaDays)
ronaTall
# ronaVote
# Regressing panel data on COVID outcomes on 2020 election data
library(data.table)
library(dplyr)
library(tibble)
library(tidyr)
library(purrr)
library(broom)
library(ggplot2)
setwd("~/git/bhack/nlyz/ronaVote/wrkdir")
# GET DATA ---------------------------------------------------------------------
getData <- function(){
pathRona <- "~/git/bhack/data/rona/NYT/us-counties.csv"
pathArea <- "~/git/bhack/data/rona/CountiesLandArea/LND01.csv"
pathPop <-  "~/git/bhack/data/rona/USDA_PopulationData/PopEst2019.csv"
pathVote <- "~/git/bhack/data/vote/NYT/presidential.csv"
ronaDays <- fread(pathRona, select = grep(        "fips|date|cases",
names(fread(pathRona, nrow = 0L))))
ronaDays <- rename(ronaDays, casesT = cases)                                  # renamed "cases" to "casesT"
area <- fread(pathArea, select = grep(            "fips|mi2",
names(fread(pathArea, nrow = 0L))))
popu <- fread(pathPop, select = grep(             "fips|state|area_name|pop2019",
names(fread(pathPop, nrow = 0L))))
vote <- fread(pathVote, select = grep(            "fips|margin2020|votes$",
names(fread(pathVote, nrow = 0L))))
return(list(ronaDays=ronaDays, area=area, popu=popu, vote=vote))
}
rawData <- getData()
ronaDays <- rawData[["ronaDays"]]
area <- rawData[["area"]]
popu <- rawData[["popu"]]
vote <- rawData[["vote"]]
rm(rawData)
# DAYS TO WEEKS ----------------------------------------------------------------
zeroMonday <- as.IDate("2019-12-29")                                            # Base date for counting weeks
ronaTall <- ronaDays %>%
mutate(weekNum = as.numeric(date - zeroMonday) %/% 7) %>%                     # Number the weeks from zeroMonday
distinct(fips, weekNum) %>%                                                   # Remove extra rows after first row/week/county
mutate(weekDate = as.Date(weekNum * 7, origin=zeroMonday)) %>%                # Reconstruct uniform dates for all rows in each week
mutate(week_DateT = paste("t", gsub("-", "_", weekDate), sep="")) %>%         # weekDate without "-", with "t" for total cases
mutate(week_DateW = paste("w", gsub("-", "_", weekDate), sep=""))             # weekDate without "-", with "w" for a week of cases
rm(ronaDays)
#weekDates <- distinct(select(ronaTall, weekDate, week_DateT, week_DateW))      # Put aside weekDates in advance of spread()
# TIDY IT ----------------------------------------------------------------------
ronaWide <- ronaTall %>%
left_join(popu, by="fips")          #pop2019, area_name, state
ronaWide
# TIDY IT ----------------------------------------------------------------------
ronaWide <- ronaTall %>%
left_join(popu, by="fips") %>%        #pop2019, area_name, state
mutate(casesByPopT = (ronaTall$casesT / ronaTall$pop2019) * 100000)           # Calculate total cases / 100,000 population
rm(ronaWide)
# TIDY IT ----------------------------------------------------------------------
ronaWide <- ronaTall %>%
left_join(popu, by="fips") %>%        #pop2019, area_name, state
mutate(casesByPopT = (ronaTall$casesT / ronaTall$pop2019) * 100000)           # Calculate total cases / 100,000 population
# TIDY IT ----------------------------------------------------------------------
ronaWide <- ronaTall %>%
left_join(popu, by="fips") %>%        #pop2019, area_name, state
mutate(casesByPopT = (casesT / pop2019) * 100000)           # Calculate total cases / 100,000 population
srt(ronaTall)
str(ronaTall)
View(ronaTall)
library(data.table)
library(dplyr)
library(tibble)
library(tidyr)
library(purrr)
library(broom)
library(ggplot2)
setwd("~/git/bhack/nlyz/ronaVote/wrkdir")
# GET DATA ---------------------------------------------------------------------
getData <- function(){
pathRona <- "~/git/bhack/data/rona/NYT/us-counties.csv"
pathArea <- "~/git/bhack/data/rona/CountiesLandArea/LND01.csv"
pathPop <-  "~/git/bhack/data/rona/USDA_PopulationData/PopEst2019.csv"
pathVote <- "~/git/bhack/data/vote/NYT/presidential.csv"
ronaDays <- fread(pathRona, select = grep(        "fips|date|cases",
names(fread(pathRona, nrow = 0L))))
ronaDays <- rename(ronaDays, casesT = cases)                                  # renamed "cases" to "casesT"
area <- fread(pathArea, select = grep(            "fips|mi2",
names(fread(pathArea, nrow = 0L))))
popu <- fread(pathPop, select = grep(             "fips|state|area_name|pop2019",
names(fread(pathPop, nrow = 0L))))
vote <- fread(pathVote, select = grep(            "fips|margin2020|votes$",
names(fread(pathVote, nrow = 0L))))
return(list(ronaDays=ronaDays, area=area, popu=popu, vote=vote))
}
library(data.table)
library(dplyr)
library(tibble)
library(tidyr)
library(purrr)
library(broom)
library(ggplot2)
setwd("~/git/bhack/nlyz/ronaVote/wrkdir")
# GET DATA ---------------------------------------------------------------------
getData <- function(){
pathRona <- "~/git/bhack/data/rona/NYT/us-counties.csv"
pathArea <- "~/git/bhack/data/rona/CountiesLandArea/LND01.csv"
pathPop <-  "~/git/bhack/data/rona/USDA_PopulationData/PopEst2019.csv"
pathVote <- "~/git/bhack/data/vote/NYT/presidential.csv"
ronaDays <- fread(pathRona, select = grep(        "fips|date|cases",
names(fread(pathRona, nrow = 0L))))
ronaDays <- rename(ronaDays, casesT = cases)                                  # renamed "cases" to "casesT"
area <- fread(pathArea, select = grep(            "fips|mi2",
names(fread(pathArea, nrow = 0L))))
popu <- fread(pathPop, select = grep(             "fips|state|area_name|pop2019",
names(fread(pathPop, nrow = 0L))))
vote <- fread(pathVote, select = grep(            "fips|margin2020|votes$",
names(fread(pathVote, nrow = 0L))))
return(list(ronaDays=ronaDays, area=area, popu=popu, vote=vote))
}
rawData <- getData()
ronaDays <- rawData[["ronaDays"]]
area <- rawData[["area"]]
popu <- rawData[["popu"]]
vote <- rawData[["vote"]]
rm(rawData)
# DAYS TO WEEKS ----------------------------------------------------------------
zeroMonday <- as.IDate("2019-12-29")                                            # Base date for counting weeks
ronaTall <- ronaDays %>%
mutate(weekNum = as.numeric(date - zeroMonday) %/% 7) %>%                     # Number the weeks from zeroMonday
distinct(fips, weekNum) %>%                                                   # Remove extra rows after first row/week/county
mutate(weekDate = as.Date(weekNum * 7, origin=zeroMonday)) %>%                # Reconstruct uniform dates for all rows in each week
mutate(week_DateT = paste("t", gsub("-", "_", weekDate), sep="")) %>%         # weekDate without "-", with "t" for total cases
mutate(week_DateW = paste("w", gsub("-", "_", weekDate), sep=""))             # weekDate without "-", with "w" for a week of cases
rm(ronaDays)
View(ronaTall)
# ronaVote
# Regressing panel data on COVID outcomes on 2020 election data
library(data.table)
library(dplyr)
library(tibble)
library(tidyr)
library(purrr)
library(broom)
library(ggplot2)
setwd("~/git/bhack/nlyz/ronaVote/wrkdir")
# GET DATA ---------------------------------------------------------------------
getData <- function(){
pathRona <- "~/git/bhack/data/rona/NYT/us-counties.csv"
pathArea <- "~/git/bhack/data/rona/CountiesLandArea/LND01.csv"
pathPop <-  "~/git/bhack/data/rona/USDA_PopulationData/PopEst2019.csv"
pathVote <- "~/git/bhack/data/vote/NYT/presidential.csv"
ronaDays <- fread(pathRona, select = grep(        "fips|date|cases",
names(fread(pathRona, nrow = 0L))))
ronaDays <- rename(ronaDays, casesT = cases)                                  # renamed "cases" to "casesT"
area <- fread(pathArea, select = grep(            "fips|mi2",
names(fread(pathArea, nrow = 0L))))
popu <- fread(pathPop, select = grep(             "fips|state|area_name|pop2019",
names(fread(pathPop, nrow = 0L))))
vote <- fread(pathVote, select = grep(            "fips|margin2020|votes$",
names(fread(pathVote, nrow = 0L))))
return(list(ronaDays=ronaDays, area=area, popu=popu, vote=vote))
}
rawData <- getData()
ronaDays <- rawData[["ronaDays"]]
area <- rawData[["area"]]
popu <- rawData[["popu"]]
vote <- rawData[["vote"]]
rm(rawData)
View(ronaDays)
# DAYS TO WEEKS ----------------------------------------------------------------
zeroMonday <- as.IDate("2019-12-29")                                            # Base date for counting weeks
ronaTall <- ronaDays %>%
mutate(weekNum = as.numeric(date - zeroMonday) %/% 7) %>%                     # Number the weeks from zeroMonday
distinct(fips, weekNum) %>%                                                   # Remove extra rows after first row/week/county
mutate(weekDate = as.Date(weekNum * 7, origin=zeroMonday)) %>%                # Reconstruct uniform dates for all rows in each week
mutate(week_DateT = paste("t", gsub("-", "_", weekDate), sep="")) %>%         # weekDate without "-", with "t" for total cases
mutate(week_DateW = paste("w", gsub("-", "_", weekDate), sep=""))             # weekDate without "-", with "w" for a week of cases
View(ronaTall)
ronaTall <- ronaDays %>%
mutate(weekNum = as.numeric(date - zeroMonday) %/% 7) %>%                     # Number the weeks from zeroMonday
distinct(fips, weekNum) #%>%                                                   # Remove extra rows after first row/week/county
View(ronaTall)
View(ronaTall)
